

import java.nio.file.Files

buildscript {
	ext.kotlin_version = '1.3.11'
	ext.jnaVersion = '5.1.0'
	ext.gdxVersion = '1.9.9'
	
	repositories {
		jcenter()
	}
	
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.2'
	}
}

apply plugin: "idea"
apply plugin: "java"
apply plugin: "kotlin"
apply plugin: "application"
apply plugin: "com.github.johnrengelman.shadow"

group "com.moun"
version "1.0.10"

mainClassName = "com.moun.Moun"

repositories {
	jcenter()
}

dependencies {
	compile group: "org.jire.arrowhead", name: "arrowhead", version: "1.3.3"
	
	compile "com.badlogicgames.gdx:gdx:$gdxVersion"
	compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
	
	compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
	compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
	compile "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
	
	compile group: 'net.java.dev.jna', name: 'jna', version: jnaVersion
	compile group: 'net.java.dev.jna', name: 'jna-platform', version: jnaVersion
	
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: kotlin_version
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-script-runtime', version: kotlin_version
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-script-util', version: kotlin_version
	compile group: 'org.jetbrains.kotlin', name: 'kotlin-compiler-embeddable', version: kotlin_version
}

jar {
	manifest {
		attributes 'Main-Class': mainClassName
	}
}

shadowJar {
	baseName = 'Moun'
	classifier = null
}

task moun {
	doLast {
		def name = "Moun $version"
		
		def dir = file("build/$name/")
		if (dir.exists()) dir.deleteDir()
		dir.mkdirs()
		
		def jarName = "${name}.jar"
		def jar = file(new File(dir, jarName))
		def allJar = file("build/libs/Moun-${version}.jar")
		Files.copy(allJar.toPath(), jar.toPath())
		
		def bat = file(new File(dir, "Start ${name}.bat"))
		Files.write(bat.toPath(), """@echo off
title %random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%%random%
echo Only continue once you are in game and can see your gun.
echo.
pause
cls
cd /d "%~dp0"
java -Xmx1g -Xms1g -XX:+UseFastAccessorMethods -XX:+UseFastEmptyMethods -XX:+UseConcMarkSweepGC -XX:+EliminateLocks -XX:+AggressiveOpts -XX:+DoEscapeAnalysis -XX:+UseCompressedOops -jar "$jarName"
pause""".getBytes())
		
		def dirSettings = file(new File(dir, "settings"))
		dirSettings.mkdirs()
		def settings = file("settings")
		settings.listFiles().each {
			Files.copy(it.toPath(), file(new File(dirSettings, it.getName())).toPath())
		}
	}
}

moun.dependsOn shadowJar
moun.mustRunAfter shadowJar

sourceSets {
	main.java.srcDirs += 'src/main/java'
	main.java.srcDirs += 'src/main/kotlin'
	main.java.srcDirs += 'settings'
}